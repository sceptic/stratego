function retarJugador(a){player_rojo=player_id.id,player_azul=a,jQuery("#players ."+a).hide(),jQuery("#players-ocupados ."+a).show(),room=player_id.id,player_rival=a,socket.emit("dejar lobby",{}),socket.emit("unirme a room",{room:my_player.id}),socket.emit("unir usuario a room",{usuario_id:a,room:my_player.id}),console.log("unir usuario a room",{usuario_id:a,room:my_player.id}),irA("#reto")}function socketsStart(a){function b(a){$("#player_tpl").html();$("#players").html(""),$("#players-ocupados").html(""),_.each(a,function(a){if(my_player.id!=a.id&&"lobby"==a.room){var b={data:a};console.log("ITEM:",a);var c=_.template($("#player_tpl").html())(b);$("#players").append(c);var d=_.template($("#player_oucpado_tpl").html())(b);$("#players-ocupados").append(d)}})}socket=io.connect(socket_host),socket.on("connect",function(){estado_usuario="on",socket.emit("USUARIO CONECTADO",my_player)}),socket.on("RESET",function(a){alert("RESET"),my_player=a}),socket.on("disconnect",function(){estado_usuario="off",console.log("desconectado ",my_player)}),socket.emit("add_user",a),socket.on("preparacion",function(a){my_player=a.user,prepararFichas()}),socket.on("UPDATE my user",function(a){my_player=a.user}),socket.on("status usuarios",function(a){usuarios=a.usuarios,b(usuarios),console.log("USUARIOS:",usuarios)}),socket.on("OTRO USUARIO: reto",function(a){console.log("OTRO USUARIO: reto",a),socket.emit("dejar lobby",{}),socket.emit("unirme a room",{room:a.room}),irA("#reto")}),socket.on("JUGAR AHORA",function(a){initGame()}),socket.on("RETO CANCELADO",function(a){socket.emit("RETO CANCELADO",a)}),socket.on("GANAS POR ABANDONO",function(){alert("HAS GANADO"),socket.emit("FIN PARTIDA",{ganador:my_player,perdedor:player2})}),socket.on("GET INFO PLAYERS",function(a){a.player.id!=my_player.id&&(player2=a.player,$(".page").hide(),$("#canvas").show(),stratego.start("jugar"))}),socket.on("my player id",function(b){player_id=b,player_id.user=a}),socket.on("de rival",function(a){console.debug(a)}),socket.on("reto de rival",function(a){console.debug(a),""==room?(console.log(room+" is empty room"),room=a.player_rival,player_rival=a.player_rival,socket.emit("unirme a room",room),irA("#reto")):(console.log("NOT EMPTY "+room),socket.emit("reto rechazado",a.player_rival))}),socket.on("cancelar reto",function(a){console.log("ENTRO EN CANCELACION"),room="",player_rojo="",player_azul="",player_rival="",irA("#inicio")})}function paraRival(a,b){socket.emit("para rival",{id:a,msg:b})}function aceptar_reto(){console.log("RETO ACEPTADO:",my_player.room),player_rojo=room,player_azul=player_id.id,socket.emit("RETO ACEPTADO",my_player.room)}function cancelar_reto(){player_rojo="",player_azul="",socket.emit("RETO RECHAZADO",my_player.room)}var my_player={},player2={},usuarios=[],estado_usuario="off";